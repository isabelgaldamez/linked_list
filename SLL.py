import list

mylist = list.SList() # instantiating the class of SLL
mylist.add_to_back(10)
mylist.add_to_back(1)
mylist.add_to_back(8)
mylist.add_to_back(11)
mylist.add_to_back(22)
mylist.print_list()
print("******")
mylist.add_to_front(2)
mylist.print_list()
print("******")
mylist.insert_after_node(2, 4)
mylist.insert_after_node(1, 5)
mylist.print_list()
print("******")
# mylist.delete_node(2)
# mylist.print_list()
print("******")
mylist.delete_node(1)
mylist.print_list()
print("******")
# mylist.delete_node(5)
# mylist.print_list()
mylist.delete_at_index(4)
mylist.print_list()
print("******")
mylist.reverse()
mylist.print_list()
print("********")
mylist.find_nth_to_last(3)
# print("******")
# mylist.list_length_iterative()
# print("******")
# print(mylist.list_length_recursive(mylist.head))
# print("******")
# mylist.swap_nodes(5, 10)
# mylist.print_list()
# print("******")
# mylist.swap_nodes(22, 11)
# mylist.print_list()
myPalindrome = list.SList() # instantiating the class of SLL
myPalindrome.add_to_back('S')
myPalindrome.add_to_back('O')
myPalindrome.add_to_back('L')
# myPalindrome.add_to_back('A')
# myPalindrome.add_to_back('R')
print("******")
print(myPalindrome.isPalindrome())





